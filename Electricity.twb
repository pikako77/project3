<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.1017.1259                               -->
<workbook source-build='2019.3.1 (20193.19.1017.1259)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='Electricity_15743861030000' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Total_consumption_Coal_gas_petroleum_Texas_monthly' inline='true' name='federated.10wjksk0v7mh2g1dy6voq1gs23ua' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Total_consumption_Coal_gas_petroleum_population_Texas_monthly' name='textscan.0nl78i413pj2l514sqhjm02a4qbb'>
            <connection class='textscan' directory='C:/Users/ckuo2/RiceHW/project3/db/CSV' filename='Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0nl78i413pj2l514sqhjm02a4qbb' name='Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv' table='[Total_consumption_Coal_gas_petroleum_population_Texas_monthly#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='string' name='month' ordinal='1' />
            <column datatype='real' name='Coal' ordinal='2' />
            <column datatype='real' name='gas' ordinal='3' />
            <column datatype='real' name='petroleum' ordinal='4' />
            <column datatype='real' name='Av Temp' ordinal='5' />
            <column datatype='real' name='Max Temp' ordinal='6' />
            <column datatype='real' name='Min Temp' ordinal='7' />
            <column datatype='real' name='population' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Coal]</local-name>
            <parent-name>[Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv]</parent-name>
            <remote-alias>Coal</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas]</local-name>
            <parent-name>[Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv]</parent-name>
            <remote-alias>gas</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>petroleum</remote-name>
            <remote-type>5</remote-type>
            <local-name>[petroleum]</local-name>
            <parent-name>[Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv]</parent-name>
            <remote-alias>petroleum</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Av Temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Av Temp]</local-name>
            <parent-name>[Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv]</parent-name>
            <remote-alias>Av Temp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Max Temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Max Temp]</local-name>
            <parent-name>[Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv]</parent-name>
            <remote-alias>Max Temp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Min Temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Min Temp]</local-name>
            <parent-name>[Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv]</parent-name>
            <remote-alias>Min Temp</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[avg:Av Temp:qk]&quot;' value='Avg. Temp' />
        </aliases>
      </column>
      <column caption='Avg Temp' datatype='real' name='[Av Temp]' role='measure' type='quantitative' />
      <column caption='Total Energy Consumption' datatype='real' name='[Calculation_1118863090399350785]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Coal]+ [gas] + [petroleum]' />
      </column>
      <column datatype='real' name='[Coal]' role='measure' type='quantitative' />
      <column datatype='real' name='[Max Temp]' role='measure' type='quantitative' />
      <column datatype='real' name='[Min Temp]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Gas' datatype='real' name='[gas]' role='measure' type='quantitative' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Petroleum' datatype='real' name='[petroleum]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Av Temp]' derivation='Attribute' name='[attr:Av Temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1118863090399350785]' derivation='Attribute' name='[attr:Calculation_1118863090399350785:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Av Temp]' derivation='Avg' name='[avg:Av Temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Coal]' derivation='Avg' name='[avg:Coal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Avg' name='[avg:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Av Temp]' derivation='Sum' name='[sum:Av Temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1118863090399350785]' derivation='Sum' name='[sum:Calculation_1118863090399350785:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Coal]' derivation='Sum' name='[sum:Coal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Max Temp]' derivation='Sum' name='[sum:Max Temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Min Temp]' derivation='Sum' name='[sum:Min Temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gas]' derivation='Sum' name='[sum:gas:qk]' pivot='key' type='quantitative' />
      <column-instance column='[petroleum]' derivation='Sum' name='[sum:petroleum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/ckuo2/OneDrive/Documents/My Tableau Repository/Datasources/Total_consumption_Coal_gas_petroleum_Texas_monthly.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/22/2019 08:20:12 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Total_consumption_Coal_gas_petroleum_Texas_monthly' increment-value='%null%' refresh-type='create' rows-inserted='217' timestamp-start='2019-11-22 20:20:12.505' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>0</ordinal>
              <family>Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>1</ordinal>
              <family>Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Coal</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Coal]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Coal</remote-alias>
              <ordinal>2</ordinal>
              <family>Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>217</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gas</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gas]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gas</remote-alias>
              <ordinal>3</ordinal>
              <family>Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>217</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>petroleum</remote-name>
              <remote-type>5</remote-type>
              <local-name>[petroleum]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>petroleum</remote-alias>
              <ordinal>4</ordinal>
              <family>Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>217</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Av Temp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Av Temp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Av Temp</remote-alias>
              <ordinal>5</ordinal>
              <family>Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>166</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Max Temp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Max Temp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Max Temp</remote-alias>
              <ordinal>6</ordinal>
              <family>Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>172</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Min Temp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Min Temp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Min Temp</remote-alias>
              <ordinal>7</ordinal>
              <family>Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>161</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>8</ordinal>
              <family>Total_consumption_Coal_gas_petroleum_population_Texas_monthly.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.365314' measure-ordering='alphabetic' measure-percentage='0.634686' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[avg:Coal:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.10wjksk0v7mh2g1dy6voq1gs23ua]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[attr:Calculation_1118863090399350785:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[sum:Calculation_1118863090399350785:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[sum:Max Temp:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[sum:Coal:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[sum:Min Temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[attr:Av Temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[avg:Av Temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[sum:Av Temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[avg:population:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[sum:petroleum:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[sum:gas:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Summary (Avg price by state)' inline='true' name='federated.1crbjba0a6iert1cp3ufj0utxx7d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Avg price by state' name='excel-direct.14etssg1wd96wo19onbju14gcbht'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ckuo2/RiceHW/project3/db/CSV/Avg price by state.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.14etssg1wd96wo19onbju14gcbht' name='Summary' table='[Summary$]' type='table'>
          <columns gridOrigin='A1:F103:no:A1:F103:0' header='yes' outcome='2'>
            <column datatype='date' name='Year' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='real' name='Residential' ordinal='2' />
            <column datatype='real' name='Commercial' ordinal='3' />
            <column datatype='real' name='Industrial' ordinal='4' />
            <column datatype='real' name='Transportation' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Summary]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Summary]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Residential</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Residential]</local-name>
            <parent-name>[Summary]</parent-name>
            <remote-alias>Residential</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Commercial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Commercial]</local-name>
            <parent-name>[Summary]</parent-name>
            <remote-alias>Commercial</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industrial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Industrial]</local-name>
            <parent-name>[Summary]</parent-name>
            <remote-alias>Industrial</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transportation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Transportation]</local-name>
            <parent-name>[Summary]</parent-name>
            <remote-alias>Transportation</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Summary]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F103:no:A1:F103:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='Sum' datatype='real' name='[Commercial]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='real' name='[Industrial]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='real' name='[Residential]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='real' name='[Transportation]' role='dimension' type='ordinal' />
      <column-instance column='[Commercial]' derivation='Avg' name='[avg:Commercial:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Industrial]' derivation='Avg' name='[avg:Industrial:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Avg' name='[avg:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Residential]' derivation='Avg' name='[avg:Residential:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Transportation]' derivation='Avg' name='[avg:Transportation:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Commercial]' derivation='Sum' name='[sum:Commercial:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Industrial]' derivation='Sum' name='[sum:Industrial:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Residential]' derivation='Sum' name='[sum:Residential:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/ckuo2/OneDrive/Documents/My Tableau Repository/Datasources/Summary (Avg price by state).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/22/2019 01:27:09 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Summary (Avg price by state)' increment-value='%null%' refresh-type='create' rows-inserted='102' timestamp-start='2019-11-22 01:27:09.846' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>0</ordinal>
              <family>Summary</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>1</ordinal>
              <family>Summary</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Residential</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Residential]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Residential</remote-alias>
              <ordinal>2</ordinal>
              <family>Summary</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Commercial</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Commercial]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Commercial</remote-alias>
              <ordinal>3</ordinal>
              <family>Summary</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>94</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Industrial</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Industrial]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Industrial</remote-alias>
              <ordinal>4</ordinal>
              <family>Summary</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>95</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Transportation</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Transportation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Transportation</remote-alias>
              <ordinal>5</ordinal>
              <family>Summary</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>55</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.559041' measure-ordering='alphabetic' measure-percentage='0.440959' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Commercial:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[sum:Commercial:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Residential:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[sum:Residential:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Industrial:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[sum:Industrial:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Transportation:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Electricity_Source' inline='true' name='federated.1joia7m11hnp9112fvm5b0rh42dk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Electricity_generation' name='excel-direct.1471byt1fqmvfe1cp203w1sk44ff'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ckuo2/RiceHW/project3/db/CSV/Electricity_generation.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1471byt1fqmvfe1cp203w1sk44ff' name='Electricity_Source' table='[Electricity_Source$]' type='table'>
          <columns gridOrigin='A1:F70:no:A1:F70:0' header='yes' outcome='6'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='coal' ordinal='1' />
            <column datatype='integer' name='natural gas' ordinal='2' />
            <column datatype='integer' name='nuclear' ordinal='3' />
            <column datatype='integer' name='renewables' ordinal='4' />
            <column datatype='integer' name='petroleum and other' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Electricity_Source]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[coal]</local-name>
            <parent-name>[Electricity_Source]</parent-name>
            <remote-alias>coal</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>natural gas</remote-name>
            <remote-type>20</remote-type>
            <local-name>[natural gas]</local-name>
            <parent-name>[Electricity_Source]</parent-name>
            <remote-alias>natural gas</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nuclear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[nuclear]</local-name>
            <parent-name>[Electricity_Source]</parent-name>
            <remote-alias>nuclear</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>renewables</remote-name>
            <remote-type>20</remote-type>
            <local-name>[renewables]</local-name>
            <parent-name>[Electricity_Source]</parent-name>
            <remote-alias>renewables</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>petroleum and other</remote-name>
            <remote-type>20</remote-type>
            <local-name>[petroleum and other]</local-name>
            <parent-name>[Electricity_Source]</parent-name>
            <remote-alias>petroleum and other</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Electricity_Source]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F70:no:A1:F70:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Coal' datatype='integer' name='[coal]' role='measure' type='quantitative' />
      <column caption='Natural Gas' datatype='integer' name='[natural gas]' role='measure' type='quantitative' />
      <column caption='Nuclear' datatype='integer' name='[nuclear]' role='measure' type='quantitative' />
      <column caption='Petroleum And Other' datatype='integer' name='[petroleum and other]' role='measure' type='quantitative' />
      <column caption='Renewables' datatype='integer' name='[renewables]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coal]' derivation='Sum' name='[sum:coal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[natural gas]' derivation='Sum' name='[sum:natural gas:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nuclear]' derivation='Sum' name='[sum:nuclear:qk]' pivot='key' type='quantitative' />
      <column-instance column='[petroleum and other]' derivation='Sum' name='[sum:petroleum and other:qk]' pivot='key' type='quantitative' />
      <column-instance column='[renewables]' derivation='Sum' name='[sum:renewables:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/ckuo2/OneDrive/Documents/My Tableau Repository/Datasources/Electricity_Source.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/22/2019 01:26:47 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Electricity_Source' increment-value='%null%' refresh-type='create' rows-inserted='69' timestamp-start='2019-11-22 01:26:47.443' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>0</ordinal>
              <family>Electricity_Source</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>69</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coal</remote-name>
              <remote-type>20</remote-type>
              <local-name>[coal]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coal</remote-alias>
              <ordinal>1</ordinal>
              <family>Electricity_Source</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>69</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>natural gas</remote-name>
              <remote-type>20</remote-type>
              <local-name>[natural gas]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>natural gas</remote-alias>
              <ordinal>2</ordinal>
              <family>Electricity_Source</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>66</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nuclear</remote-name>
              <remote-type>20</remote-type>
              <local-name>[nuclear]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nuclear</remote-alias>
              <ordinal>3</ordinal>
              <family>Electricity_Source</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>renewables</remote-name>
              <remote-type>20</remote-type>
              <local-name>[renewables]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>renewables</remote-alias>
              <ordinal>4</ordinal>
              <family>Electricity_Source</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>petroleum and other</remote-name>
              <remote-type>20</remote-type>
              <local-name>[petroleum and other]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>petroleum and other</remote-alias>
              <ordinal>5</ordinal>
              <family>Electricity_Source</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.404059' measure-ordering='alphabetic' measure-percentage='0.595941' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:petroleum and other:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:renewable:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:renewables:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:petroleum:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:coal:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:natural gas:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:nuclear:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:other:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:hydroelectric:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Prcice vs Temp by month (Price_vs_temp_by_month)' inline='true' name='federated.1n5l4pt1wu9nf41a4y7sd02va490' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Price_vs_temp_by_month' name='excel-direct.0vuqk4b15jcpu81ecy3tk05tyne4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ckuo2/RiceHW/project3/db/CSV/Price_vs_temp_by_month.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0vuqk4b15jcpu81ecy3tk05tyne4' name='Prcice vs Temp by month' table='[&apos;Prcice vs Temp by month$&apos;]' type='table'>
          <columns gridOrigin='A1:K524:no:A1:K524:0' header='yes' outcome='2'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='F3' ordinal='2' />
            <column datatype='string' name='Month' ordinal='3' />
            <column datatype='real' name='Average Retail Price of Electricity, Residential' ordinal='4' />
            <column datatype='real' name='Average Retail Price of Electricity, Commercial' ordinal='5' />
            <column datatype='real' name='Average Retail Price of Electricity, Industrial' ordinal='6' />
            <column datatype='real' name='Average Retail Price of Electricity, Transportation' ordinal='7' />
            <column datatype='real' name='Average Retail Price of Electricity, Other' ordinal='8' />
            <column datatype='real' name='Average Retail Price of Electricity, Total' ordinal='9' />
            <column datatype='real' name='Temp' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Residential</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Residential]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Residential</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Commercial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Commercial]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Commercial</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Industrial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Industrial]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Industrial</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Transportation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Transportation]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Transportation</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Other</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Other]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Other</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Total]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Total</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temp]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Temp</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K524:no:A1:K524:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Commercial:qk]&quot;' value='Commercial' />
          <alias key='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Industrial:qk]&quot;' value='Industrial' />
          <alias key='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Residential:qk]&quot;' value='Residential' />
          <alias key='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Total:qk]&quot;' value='Total' />
          <alias key='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Transportation:qk]&quot;' value='Transportation' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[Average Retail Price of Electricity, Commercial]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Average Retail Price of Electricity, Industrial]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='real' name='[Average Retail Price of Electricity, Other]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Average Retail Price of Electricity, Residential]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Average Retail Price of Electricity, Total]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='real' name='[Average Retail Price of Electricity, Transportation]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[F3]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Temp]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Commercial]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Commercial:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Industrial]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Industrial:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Residential]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Residential:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Total]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Transportation]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Transportation:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Temp]' derivation='Avg' name='[avg:Temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Temp]' derivation='None' name='[none:Temp:ok]' pivot='key' type='ordinal' />
      <column-instance column='[F3]' derivation='Sum' name='[sum:F3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/ckuo2/OneDrive/Documents/My Tableau Repository/Datasources/Prcice vs Temp by month (Price_vs_temp_by_month).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/22/2019 01:26:28 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Prcice vs Temp by month (Price_vs_temp_by_month)' increment-value='%null%' refresh-type='create' rows-inserted='523' timestamp-start='2019-11-22 01:26:28.860' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>523</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>1</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F3</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F3</remote-alias>
              <ordinal>2</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>3</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Retail Price of Electricity, Residential</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Retail Price of Electricity, Residential]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Retail Price of Electricity, Residential</remote-alias>
              <ordinal>4</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>288</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Retail Price of Electricity, Commercial</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Retail Price of Electricity, Commercial]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Retail Price of Electricity, Commercial</remote-alias>
              <ordinal>5</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>261</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Retail Price of Electricity, Industrial</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Retail Price of Electricity, Industrial]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Retail Price of Electricity, Industrial</remote-alias>
              <ordinal>6</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>221</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Retail Price of Electricity, Transportation</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Retail Price of Electricity, Transportation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Retail Price of Electricity, Transportation</remote-alias>
              <ordinal>7</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Retail Price of Electricity, Other</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Retail Price of Electricity, Other]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Retail Price of Electricity, Other</remote-alias>
              <ordinal>8</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Retail Price of Electricity, Total</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Retail Price of Electricity, Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Retail Price of Electricity, Total</remote-alias>
              <ordinal>9</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Temp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Temp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Temp</remote-alias>
              <ordinal>10</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>472</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.654982' measure-ordering='alphabetic' measure-percentage='0.345018' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Temp:ok]' type='palette'>
            <map to='#499894'>
              <bucket>46.399999999999999</bucket>
            </map>
            <map to='#499894'>
              <bucket>49.0</bucket>
            </map>
            <map to='#499894'>
              <bucket>51.0</bucket>
            </map>
            <map to='#499894'>
              <bucket>53.200000000000003</bucket>
            </map>
            <map to='#499894'>
              <bucket>59.399999999999999</bucket>
            </map>
            <map to='#499894'>
              <bucket>63.200000000000003</bucket>
            </map>
            <map to='#499894'>
              <bucket>67.799999999999997</bucket>
            </map>
            <map to='#499894'>
              <bucket>71.599999999999994</bucket>
            </map>
            <map to='#499894'>
              <bucket>78.5</bucket>
            </map>
            <map to='#499894'>
              <bucket>79.200000000000003</bucket>
            </map>
            <map to='#499894'>
              <bucket>83.900000000000006</bucket>
            </map>
            <map to='#499894'>
              <bucket>85.099999999999994</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>43.100000000000001</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>49.799999999999997</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>50.799999999999997</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>58.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>59.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>66.900000000000006</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>70.599999999999994</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>74.900000000000006</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>76.5</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>82.700000000000003</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>43.399999999999999</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>44.5</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>50.600000000000001</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>51.799999999999997</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>58.700000000000003</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>61.200000000000003</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>69.599999999999994</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>71.5</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>77.900000000000006</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>78.099999999999994</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>83.299999999999997</bucket>
            </map>
            <map to='#79706e'>
              <bucket>45.399999999999999</bucket>
            </map>
            <map to='#79706e'>
              <bucket>48.200000000000003</bucket>
            </map>
            <map to='#79706e'>
              <bucket>55.700000000000003</bucket>
            </map>
            <map to='#79706e'>
              <bucket>56.5</bucket>
            </map>
            <map to='#79706e'>
              <bucket>64.400000000000006</bucket>
            </map>
            <map to='#79706e'>
              <bucket>65.0</bucket>
            </map>
            <map to='#79706e'>
              <bucket>72.799999999999997</bucket>
            </map>
            <map to='#79706e'>
              <bucket>73.299999999999997</bucket>
            </map>
            <map to='#79706e'>
              <bucket>76.900000000000006</bucket>
            </map>
            <map to='#79706e'>
              <bucket>80.799999999999997</bucket>
            </map>
            <map to='#79706e'>
              <bucket>82.799999999999997</bucket>
            </map>
            <map to='#79706e'>
              <bucket>85.200000000000003</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>47.200000000000003</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>49.100000000000001</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>54.399999999999999</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>55.399999999999999</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>63.600000000000001</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>64.299999999999997</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>68.5</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>72.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>78.599999999999994</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>79.299999999999997</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>84.099999999999994</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>86.400000000000006</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>44.799999999999997</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>47.399999999999999</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>52.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>53.299999999999997</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>58.899999999999999</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>61.700000000000003</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>70.200000000000003</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>71.799999999999997</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>75.700000000000003</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>78.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>82.099999999999994</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>83.400000000000006</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>48.899999999999999</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>49.399999999999999</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>50.399999999999999</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>57.299999999999997</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>65.799999999999997</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>66.299999999999997</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>66.599999999999994</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>74.400000000000006</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>76.299999999999997</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>80.900000000000006</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>82.400000000000006</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>42.399999999999999</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>43.899999999999999</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>50.200000000000003</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>51.100000000000001</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>58.299999999999997</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>59.5</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>67.099999999999994</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>70.700000000000003</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>75.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>76.599999999999994</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>82.900000000000006</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>84.200000000000003</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>48.799999999999997</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>49.200000000000003</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>52.5</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>56.899999999999999</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>61.399999999999999</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>66.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>66.099999999999994</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>74.299999999999997</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>77.400000000000006</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>80.700000000000003</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>81.700000000000003</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>45.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>47.600000000000001</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>52.299999999999997</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>55.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>61.799999999999997</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>63.799999999999997</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>70.299999999999997</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>72.400000000000006</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>75.799999999999997</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>78.200000000000003</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>82.200000000000003</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>83.599999999999994</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>45.5</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>48.299999999999997</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>51.899999999999999</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>56.200000000000003</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>64.5</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>65.299999999999997</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>73.599999999999994</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>73.700000000000003</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>77.099999999999994</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>80.299999999999997</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>81.299999999999997</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>85.400000000000006</bucket>
            </map>
            <map to='#d37295'>
              <bucket>45.799999999999997</bucket>
            </map>
            <map to='#d37295'>
              <bucket>48.399999999999999</bucket>
            </map>
            <map to='#d37295'>
              <bucket>56.600000000000001</bucket>
            </map>
            <map to='#d37295'>
              <bucket>57.600000000000001</bucket>
            </map>
            <map to='#d37295'>
              <bucket>61.100000000000001</bucket>
            </map>
            <map to='#d37295'>
              <bucket>65.400000000000006</bucket>
            </map>
            <map to='#d37295'>
              <bucket>69.700000000000003</bucket>
            </map>
            <map to='#d37295'>
              <bucket>73.799999999999997</bucket>
            </map>
            <map to='#d37295'>
              <bucket>77.200000000000003</bucket>
            </map>
            <map to='#d37295'>
              <bucket>80.5</bucket>
            </map>
            <map to='#d37295'>
              <bucket>81.400000000000006</bucket>
            </map>
            <map to='#d37295'>
              <bucket>87.0</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>46.200000000000003</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>49.299999999999997</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>49.600000000000001</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>57.200000000000003</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>64.900000000000006</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>66.5</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>70.5</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>75.5</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>79.400000000000006</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>81.799999999999997</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>46.600000000000001</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>50.700000000000003</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>53.0</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>57.899999999999999</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>58.399999999999999</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>66.400000000000006</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>66.700000000000003</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>74.599999999999994</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>76.400000000000006</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>81.099999999999994</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>82.599999999999994</bucket>
            </map>
            <map to='#e15759'>
              <bucket>44.899999999999999</bucket>
            </map>
            <map to='#e15759'>
              <bucket>47.799999999999997</bucket>
            </map>
            <map to='#e15759'>
              <bucket>54.799999999999997</bucket>
            </map>
            <map to='#e15759'>
              <bucket>55.899999999999999</bucket>
            </map>
            <map to='#e15759'>
              <bucket>59.600000000000001</bucket>
            </map>
            <map to='#e15759'>
              <bucket>64.200000000000003</bucket>
            </map>
            <map to='#e15759'>
              <bucket>68.599999999999994</bucket>
            </map>
            <map to='#e15759'>
              <bucket>72.5</bucket>
            </map>
            <map to='#e15759'>
              <bucket>78.700000000000003</bucket>
            </map>
            <map to='#e15759'>
              <bucket>79.5</bucket>
            </map>
            <map to='#e15759'>
              <bucket>80.099999999999994</bucket>
            </map>
            <map to='#e15759'>
              <bucket>84.400000000000006</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>46.100000000000001</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>48.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>50.899999999999999</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>52.899999999999999</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>59.299999999999997</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>63.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>67.400000000000006</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>70.900000000000006</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>76.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>79.099999999999994</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>82.299999999999997</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>83.700000000000003</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>42.5</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>44.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>50.299999999999997</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>51.5</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>60.299999999999997</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>61.899999999999999</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>67.200000000000003</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>71.400000000000006</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>75.200000000000003</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>77.599999999999994</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>83.099999999999994</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>84.299999999999997</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>45.899999999999999</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>48.700000000000003</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>56.799999999999997</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>57.0</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>64.700000000000003</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>65.900000000000006</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>73.900000000000006</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>74.0</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>74.099999999999994</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>81.5</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>88.200000000000003</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>47.899999999999999</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>48.600000000000001</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>55.5</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>56.0</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>59.700000000000003</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>64.799999999999997</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>69.099999999999994</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>72.599999999999994</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>79.0</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>79.900000000000006</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>80.599999999999994</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>84.5</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>44.399999999999999</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>47.100000000000001</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>51.700000000000003</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>53.100000000000001</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>58.5</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>61.0</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>66.799999999999997</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>69.200000000000003</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>75.400000000000006</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>77.700000000000003</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>83.200000000000003</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Commercial:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Residential:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Total:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Industrial:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[sum:F3:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Temp:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Transportation:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Monthly Data (Average_Retail_Prices_of_Electricity)' inline='true' name='federated.1rm090r1756gfs1agulm2191tz90' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Average_Retail_Prices_of_Electricity' name='excel-direct.1w5uwpk0xv6in81a3zul907f9ohl'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ckuo2/RiceHW/project3/db/CSV/Average_Retail_Prices_of_Electricity.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1w5uwpk0xv6in81a3zul907f9ohl' name='Annual Price' table='[&apos;Annual Price$&apos;]' type='table'>
          <columns gridOrigin='A1:G61:no:A1:G61:0' header='yes' outcome='2'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='real' name='Average Retail Price of Electricity, Residential' ordinal='1' />
            <column datatype='real' name='Average Retail Price of Electricity, Commercial' ordinal='2' />
            <column datatype='real' name='Average Retail Price of Electricity, Industrial' ordinal='3' />
            <column datatype='real' name='Average Retail Price of Electricity, Transportation' ordinal='4' />
            <column datatype='real' name='Average Retail Price of Electricity, Other' ordinal='5' />
            <column datatype='real' name='Average Retail Price of Electricity, Total' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Annual Price]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Residential</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Residential]</local-name>
            <parent-name>[Annual Price]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Residential</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Commercial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Commercial]</local-name>
            <parent-name>[Annual Price]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Commercial</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Industrial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Industrial]</local-name>
            <parent-name>[Annual Price]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Industrial</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Transportation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Transportation]</local-name>
            <parent-name>[Annual Price]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Transportation</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Other</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Other]</local-name>
            <parent-name>[Annual Price]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Other</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Total]</local-name>
            <parent-name>[Annual Price]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Total</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Annual Price]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G61:no:A1:G61:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Commercial:qk]&quot;' value='Commercial' />
          <alias key='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Industrial:qk]&quot;' value='Industrial' />
          <alias key='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Other:qk]&quot;' value='Other' />
          <alias key='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Residential:qk]&quot;' value='Residential' />
          <alias key='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Total:qk]&quot;' value='Total' />
          <alias key='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Transportation:qk]&quot;' value='Transportation' />
        </aliases>
      </column>
      <column datatype='real' name='[Average Retail Price of Electricity, Commercial]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Average Retail Price of Electricity, Industrial]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Average Retail Price of Electricity, Other]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Average Retail Price of Electricity, Residential]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Average Retail Price of Electricity, Total]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Average Retail Price of Electricity, Transportation]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Industrial]' derivation='Attribute' name='[attr:Average Retail Price of Electricity, Industrial:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Residential]' derivation='Attribute' name='[attr:Average Retail Price of Electricity, Residential:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Transportation]' derivation='Attribute' name='[attr:Average Retail Price of Electricity, Transportation:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Commercial]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Commercial:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Industrial]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Industrial:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Other]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Other:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Residential]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Residential:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Total]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Transportation]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Transportation:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Avg' name='[avg:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Industrial]' derivation='None' name='[none:Average Retail Price of Electricity, Industrial:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Average Retail Price of Electricity, Residential]' derivation='None' name='[none:Average Retail Price of Electricity, Residential:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/ckuo2/OneDrive/Documents/My Tableau Repository/Datasources/Monthly Data (Average_Retail_Prices_of_Electricity).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/22/2019 01:28:01 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Monthly Data (Average_Retail_Prices_of_Electricity)' increment-value='%null%' refresh-type='create' rows-inserted='60' timestamp-start='2019-11-22 01:28:01.354' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>0</ordinal>
              <family>Annual Price</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>60</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Retail Price of Electricity, Residential</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Retail Price of Electricity, Residential]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Retail Price of Electricity, Residential</remote-alias>
              <ordinal>1</ordinal>
              <family>Annual Price</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Retail Price of Electricity, Commercial</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Retail Price of Electricity, Commercial]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Retail Price of Electricity, Commercial</remote-alias>
              <ordinal>2</ordinal>
              <family>Annual Price</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>47</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Retail Price of Electricity, Industrial</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Retail Price of Electricity, Industrial]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Retail Price of Electricity, Industrial</remote-alias>
              <ordinal>3</ordinal>
              <family>Annual Price</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Retail Price of Electricity, Transportation</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Retail Price of Electricity, Transportation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Retail Price of Electricity, Transportation</remote-alias>
              <ordinal>4</ordinal>
              <family>Annual Price</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Retail Price of Electricity, Other</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Retail Price of Electricity, Other]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Retail Price of Electricity, Other</remote-alias>
              <ordinal>5</ordinal>
              <family>Annual Price</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Retail Price of Electricity, Total</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Retail Price of Electricity, Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Retail Price of Electricity, Total</remote-alias>
              <ordinal>6</ordinal>
              <family>Annual Price</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.618081' measure-ordering='alphabetic' measure-percentage='0.381919' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Commercial:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Residential:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[attr:Average Retail Price of Electricity, Residential:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Total:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Other:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[attr:Average Retail Price of Electricity, Industrial:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Industrial:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Industrial:ok]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Residential:ok]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[attr:Average Retail Price of Electricity, Transportation:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Transportation:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Avg Temp vs. Total Energy Consumption by month' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Avg Temp vs. Total Energy Consumption by month' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Avg Price by Sector'>
      <table>
        <view>
          <datasources>
            <datasource caption='Monthly Data (Average_Retail_Prices_of_Electricity)' name='federated.1rm090r1756gfs1agulm2191tz90' />
          </datasources>
          <datasource-dependencies datasource='federated.1rm090r1756gfs1agulm2191tz90'>
            <column datatype='real' name='[Average Retail Price of Electricity, Commercial]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Average Retail Price of Electricity, Industrial]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Average Retail Price of Electricity, Other]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Average Retail Price of Electricity, Residential]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Average Retail Price of Electricity, Total]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Average Retail Price of Electricity, Transportation]' role='dimension' type='ordinal' />
            <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Commercial]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Commercial:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Industrial]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Industrial:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Other]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Other:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Residential]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Residential:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Total]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Transportation]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Transportation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Transportation]' derivation='None' name='[none:Average Retail Price of Electricity, Transportation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Commercial:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Industrial:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Residential:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Total:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Transportation:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Commercial:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Industrial:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Residential:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Total:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Other:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Transportation:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]' included-values='in-range'>
            <min>1960</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]</column>
            <column>[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]' field-type='quantitative' major-origin='0' major-spacing='5' max='2019' min='1960' range-type='fixed' scope='cols' type='space' />
            <format attr='auto-subtitle' class='0' field='[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.1rm090r1756gfs1agulm2191tz90].[Multiple Values]' scope='rows' value='Cents per Kilowatthour,  Including Taxes' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]' value='Sectors'>
              <formatted-text>
                <run>Sectors</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]' value='Sectors'>
              <formatted-text>
                <run>Sectors</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]' />
              <text column='[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rm090r1756gfs1agulm2191tz90].[Multiple Values]</rows>
        <cols>[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{D99E33EC-8F44-4435-82F1-FFDC55596181}' />
    </worksheet>
    <worksheet name='Avg Price by state'>
      <table>
        <view>
          <datasources>
            <datasource caption='Summary (Avg price by state)' name='federated.1crbjba0a6iert1cp3ufj0utxx7d' />
          </datasources>
          <datasource-dependencies datasource='federated.1crbjba0a6iert1cp3ufj0utxx7d'>
            <column aggregation='Sum' datatype='real' name='[Commercial]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[Industrial]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[Residential]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Transportation]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Commercial]' derivation='Avg' name='[avg:Commercial:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Industrial]' derivation='Avg' name='[avg:Industrial:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Residential]' derivation='Avg' name='[avg:Residential:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Transportation]' derivation='Avg' name='[avg:Transportation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Commercial:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Industrial:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Residential:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Commercial:qk]&quot;</bucket>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Industrial:qk]&quot;</bucket>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Transportation:qk]&quot;</bucket>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Residential:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[none:State:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Hawaii&quot;</bucket>
              <bucket>&quot;Alaska&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;Rhode Island&quot;</bucket>
              <bucket>&quot;New Hampshire&quot;</bucket>
              <bucket>&quot;Vermont&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;Maine&quot;</bucket>
              <bucket>&quot;Michigan&quot;</bucket>
              <bucket>&quot;Iowa&quot;</bucket>
              <bucket>&quot;Minnesota&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
              <bucket>&quot;Missouri&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;Kansas&quot;</bucket>
              <bucket>&quot;Maryland&quot;</bucket>
              <bucket>&quot;District of Columbia&quot;</bucket>
              <bucket>&quot;Colorado&quot;</bucket>
              <bucket>&quot;New Mexico&quot;</bucket>
              <bucket>&quot;South Carolina&quot;</bucket>
              <bucket>&quot;South Dakota&quot;</bucket>
              <bucket>&quot;North Dakota&quot;</bucket>
              <bucket>&quot;Nebraska&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>&quot;Indiana&quot;</bucket>
              <bucket>&quot;Pennsylvania&quot;</bucket>
              <bucket>&quot;Ohio&quot;</bucket>
              <bucket>&quot;Delaware&quot;</bucket>
              <bucket>&quot;Wyoming&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Montana&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Virginia&quot;</bucket>
              <bucket>&quot;Illinois&quot;</bucket>
              <bucket>&quot;West Virginia&quot;</bucket>
              <bucket>&quot;North Carolina&quot;</bucket>
              <bucket>&quot;Mississippi&quot;</bucket>
              <bucket>&quot;Tennessee&quot;</bucket>
              <bucket>&quot;Nevada&quot;</bucket>
              <bucket>&quot;Utah&quot;</bucket>
              <bucket>&quot;Oregon&quot;</bucket>
              <bucket>&quot;Idaho&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;Kentucky&quot;</bucket>
              <bucket>&quot;Louisiana&quot;</bucket>
              <bucket>&quot;Oklahoma&quot;</bucket>
              <bucket>&quot;Arkansas&quot;</bucket>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[yr:Year:ok]'>
            <groupfilter function='level-members' level='[yr:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[yr:Year:ok]</column>
            <column>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[Multiple Values]' scope='rows' value='Cents per Kilowatthour' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[:Measure Names]' value='Sectors'>
              <formatted-text>
                <run>Sectors</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[:Measure Names]' value='Sectors&#10;'>
              <formatted-text>
                <run>Sectors&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[none:State:nk]' />
              <color column='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[:Measure Names]' />
              <lod column='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[Multiple Values]</rows>
        <cols>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[none:State:nk]</cols>
      </table>
      <simple-id uuid='{D0615383-896E-4324-91C8-7FA20B21B632}' />
    </worksheet>
    <worksheet name='Avg Price vs. Monthly Temp'>
      <table>
        <view>
          <datasources>
            <datasource caption='Prcice vs Temp by month (Price_vs_temp_by_month)' name='federated.1n5l4pt1wu9nf41a4y7sd02va490' />
          </datasources>
          <datasource-dependencies datasource='federated.1n5l4pt1wu9nf41a4y7sd02va490'>
            <column aggregation='Sum' datatype='real' name='[Average Retail Price of Electricity, Commercial]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Average Retail Price of Electricity, Industrial]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Average Retail Price of Electricity, Residential]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Average Retail Price of Electricity, Total]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[Average Retail Price of Electricity, Transportation]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temp]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Commercial]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Commercial:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Industrial]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Industrial:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Residential]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Residential:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Total]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Transportation]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Transportation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Temp]' derivation='Avg' name='[avg:Temp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Commercial]' derivation='None' name='[none:Average Retail Price of Electricity, Commercial:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Residential:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Total:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Industrial:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Commercial:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Transportation:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Residential:qk]&quot;</bucket>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Total:qk]&quot;</bucket>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Industrial:qk]&quot;</bucket>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Average Retail Price of Electricity, Commercial:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Year:qk]' included-values='in-range'>
            <min>1976</min>
          </filter>
          <slices>
            <column>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Year:qk]</column>
            <column>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Temp:qk]' value='56' />
            <format attr='width' field='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[Multiple Values]' value='56' />
            <format attr='title' class='0' field='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[Multiple Values]' scope='rows' value='Cents per Kilowatthour,  Including Taxes' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Month:nk]' value='61' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]' value='Avg. Retail Price (Cents per KW)'>
              <formatted-text>
                <run>Avg. Retail Price (Cents per KW)</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]' />
              <text column='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Temp:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Temp:qk] + [federated.1n5l4pt1wu9nf41a4y7sd02va490].[Multiple Values])</rows>
        <cols>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Month:nk]</cols>
      </table>
      <simple-id uuid='{5829885D-BEDE-4ABF-B66A-B471047C345E}' />
    </worksheet>
    <worksheet name='Avg Temp vs. Total Energy Consumption by month'>
      <table>
        <view>
          <datasources>
            <datasource caption='Total_consumption_Coal_gas_petroleum_Texas_monthly' name='federated.10wjksk0v7mh2g1dy6voq1gs23ua' />
          </datasources>
          <datasource-dependencies datasource='federated.10wjksk0v7mh2g1dy6voq1gs23ua'>
            <column caption='Avg Temp' datatype='real' name='[Av Temp]' role='measure' type='quantitative' />
            <column caption='Total Energy Consumption' datatype='real' name='[Calculation_1118863090399350785]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Coal]+ [gas] + [petroleum]' />
            </column>
            <column datatype='real' name='[Coal]' role='measure' type='quantitative' />
            <column-instance column='[Av Temp]' derivation='Avg' name='[avg:Av Temp:qk]' pivot='key' type='quantitative' />
            <column caption='Gas' datatype='real' name='[gas]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Petroleum' datatype='real' name='[petroleum]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118863090399350785]' derivation='Sum' name='[sum:Calculation_1118863090399350785:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[none:month:nk]'>
            <groupfilter from='&quot;Apr&quot;' function='range' level='[none:month:nk]' to='&quot;Sep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[none:year:qk]' included-values='in-range'>
            <min>2001</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[none:year:qk]</column>
            <column>[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[none:month:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[avg:Av Temp:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[avg:Av Temp:qk]' scope='rows' value='Avg. Temp' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[avg:Av Temp:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[sum:Calculation_1118863090399350785:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[avg:Av Temp:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.10wjksk0v7mh2g1dy6voq1gs23ua].[sum:Calculation_1118863090399350785:qk] + [federated.10wjksk0v7mh2g1dy6voq1gs23ua].[avg:Av Temp:qk])</rows>
        <cols>[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[none:month:nk]</cols>
      </table>
      <simple-id uuid='{6264FC4C-77DA-4742-A165-957EBE0B6F47}' />
    </worksheet>
    <worksheet name='Electricity Source'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electricity_Source' name='federated.1joia7m11hnp9112fvm5b0rh42dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1joia7m11hnp9112fvm5b0rh42dk'>
            <column caption='Coal' datatype='integer' name='[coal]' role='measure' type='quantitative' />
            <column caption='Natural Gas' datatype='integer' name='[natural gas]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Nuclear' datatype='integer' name='[nuclear]' role='measure' type='quantitative' />
            <column caption='Petroleum And Other' datatype='integer' name='[petroleum and other]' role='measure' type='quantitative' />
            <column caption='Renewables' datatype='integer' name='[renewables]' role='measure' type='quantitative' />
            <column-instance column='[coal]' derivation='Sum' name='[sum:coal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[natural gas]' derivation='Sum' name='[sum:natural gas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nuclear]' derivation='Sum' name='[sum:nuclear:qk]' pivot='key' type='quantitative' />
            <column-instance column='[petroleum and other]' derivation='Sum' name='[sum:petroleum and other:qk]' pivot='key' type='quantitative' />
            <column-instance column='[renewables]' derivation='Sum' name='[sum:renewables:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1joia7m11hnp9112fvm5b0rh42dk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:coal:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:natural gas:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:petroleum and other:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:renewables:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:nuclear:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1joia7m11hnp9112fvm5b0rh42dk].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:coal:qk]&quot;</bucket>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:natural gas:qk]&quot;</bucket>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:petroleum and other:qk]&quot;</bucket>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:renewables:qk]&quot;</bucket>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:nuclear:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1joia7m11hnp9112fvm5b0rh42dk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1joia7m11hnp9112fvm5b0rh42dk].[Multiple Values]' scope='rows' value='billion kilowatthours' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1joia7m11hnp9112fvm5b0rh42dk].[:Measure Names]' value='Energy Source'>
              <formatted-text>
                <run>Energy Source</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1joia7m11hnp9112fvm5b0rh42dk].[:Measure Names]' value='Energy Source'>
              <formatted-text>
                <run>Energy Source</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1joia7m11hnp9112fvm5b0rh42dk].[:Measure Names]' />
              <lod column='[federated.1joia7m11hnp9112fvm5b0rh42dk].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1joia7m11hnp9112fvm5b0rh42dk].[Multiple Values]</rows>
        <cols>[federated.1joia7m11hnp9112fvm5b0rh42dk].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{9A6D0E29-315E-4B0B-AE0F-B28B8D52B0C0}' />
    </worksheet>
    <worksheet name='Pop vs Coal Consumption'>
      <table>
        <view>
          <datasources>
            <datasource caption='Total_consumption_Coal_gas_petroleum_Texas_monthly' name='federated.10wjksk0v7mh2g1dy6voq1gs23ua' />
          </datasources>
          <datasource-dependencies datasource='federated.10wjksk0v7mh2g1dy6voq1gs23ua'>
            <column datatype='real' name='[Coal]' role='measure' type='quantitative' />
            <column-instance column='[Coal]' derivation='Avg' name='[avg:Coal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Avg' name='[avg:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[avg:population:qk]' field-type='quantitative' max='30541423.5' min='15000000.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[avg:Coal:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[avg:Coal:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[avg:population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.10wjksk0v7mh2g1dy6voq1gs23ua].[avg:population:qk] + [federated.10wjksk0v7mh2g1dy6voq1gs23ua].[avg:Coal:qk])</rows>
        <cols>[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{48342151-23B1-4C6F-B723-458D9714916C}' />
    </worksheet>
    <worksheet name='US Avg Electricity Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='Monthly Data (Average_Retail_Prices_of_Electricity)' name='federated.1rm090r1756gfs1agulm2191tz90' />
          </datasources>
          <datasource-dependencies datasource='federated.1rm090r1756gfs1agulm2191tz90'>
            <column datatype='real' name='[Average Retail Price of Electricity, Total]' role='dimension' type='ordinal' />
            <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Total]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]' included-values='in-range'>
            <min>1960</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Total:qk]' scope='rows' value='Avg. Retail Price of Electricity (Cents per Kilowatthour,  Including Taxes)' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Total:qk]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]' field-type='quantitative' max='2018' min='1960' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Total:qk]</rows>
        <cols>[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{06B3ACF3-0B62-43F9-8F2A-C453811AD14C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Electricty' type='storyboard'>
      <style />
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='7' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='6' param='vert' removable='false' type='layout-flow' w='98438' x='781' y='1042'>
            <zone h='4297' id='8' type='title' w='98438' x='781' y='1042' />
            <zone h='13151' id='9' is-fixed='true' paired-zone-id='10' removable='false' type='flipboard-nav' w='98438' x='781' y='5339' />
            <zone h='80468' id='10' paired-zone-id='9' removable='false' type='flipboard' w='98438' x='781' y='18490'>
              <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Avg Price by Sector in US from 1960 to 2019' captured-sheet='Avg Price by Sector' id='1' />
                  <story-point caption='Avg Price by Sector in each state in July 2018 vs. 2019' captured-sheet='Avg Price by state' id='2' />
                  <story-point caption='Sources of US electricity generation 1950 to 2018 ' captured-sheet='Electricity Source' id='3'>
                    <capturedDeltas>
                      <worksheet name='Electricity Source'>
                        <filter class='categorical' column='[federated.1joia7m11hnp9112fvm5b0rh42dk].[:Measure Names]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:coal:qk]&quot;' />
                            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:natural gas:qk]&quot;' />
                            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:nuclear:qk]&quot;' />
                            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:petroleum and other:qk]&quot;' />
                            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:renewables:qk]&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Avg Temp by month and the corresponding price in each sector' captured-sheet='Avg Price vs. Monthly Temp' id='4'>
                    <capturedDeltas>
                      <worksheet name='Avg Price vs. Monthly Temp'>
                        <filter class='quantitative' column='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Year:qk]' included-values='in-range'>
                          <min>1976</min>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Texas: Avg Coal Consumption vs. Population' captured-sheet='Pop vs Coal Consumption' id='5' />
                  <story-point caption='Texas: Avg Temp and the corresponding energy consumption by month' captured-sheet='Avg Temp vs. Total Energy Consumption by month' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{4EA10E4F-20B5-4DED-8CD6-08F12CD39BC3}' />
    </dashboard>
  </dashboards>
  <windows source-height='114'>
    <window class='worksheet' name='US Avg Electricity Price'>
      <cards>
        <edge name='left'>
          <strip size='208'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Total:nk]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Total:ok]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Temp:nk]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[yr:Month:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9FC65A39-C8C7-46A8-859C-60A812A406E3}' />
    </window>
    <window class='worksheet' name='Avg Price by Sector'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='140'>
            <card param='[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='9' param='[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]' type='color' />
            <card param='[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Commercial:qk]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Industrial:qk]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Commercial:ok]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Industrial:ok]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Other:nk]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Residential:ok]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Total:ok]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Transportation:nk]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Transportation:ok]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:nk]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{60BDEB04-AD23-4643-8B8B-959C6D03DEF8}' />
    </window>
    <window class='worksheet' name='Avg Price vs. Monthly Temp'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='202'>
            <card param='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='10' param='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Temp:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]</field>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Average Retail Price of Electricity, Commercial:ok]</field>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Average Retail Price of Electricity, Industrial:nk]</field>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Average Retail Price of Electricity, Residential:nk]</field>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Average Retail Price of Electricity, Total:nk]</field>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Average Retail Price of Electricity, Transportation:ok]</field>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Month:ok]</field>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Month:qk]</field>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Temp:nk]</field>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Year:qk]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Total:ok]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7044E498-ECF9-46FE-BD2E-3D6BD45F89D9}' />
    </window>
    <window class='worksheet' name='Electricity Source'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1joia7m11hnp9112fvm5b0rh42dk].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1joia7m11hnp9112fvm5b0rh42dk].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1joia7m11hnp9112fvm5b0rh42dk].[:Measure Names]</field>
            <field>[federated.1joia7m11hnp9112fvm5b0rh42dk].[none:year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C4808978-C818-4757-8B9A-9ED99177190D}' />
    </window>
    <window class='worksheet' name='Avg Price by state'>
      <cards>
        <edge name='left'>
          <strip size='228'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='214'>
            <card param='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card param='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[yr:Year:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[:Measure Names]</field>
            <field>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[none:Commercial:ok]</field>
            <field>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[none:Industrial:ok]</field>
            <field>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[none:Residential:ok]</field>
            <field>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[none:State:nk]</field>
            <field>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[none:Transportation:nk]</field>
            <field>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{839F0A5C-D186-4B6E-8F78-E8626A508FD8}' />
    </window>
    <window class='worksheet' name='Pop vs Coal Consumption'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[avg:population:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[:Measure Names]</field>
            <field>[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1842B531-F20F-4C8E-B9ED-61495F85F87E}' />
    </window>
    <window class='worksheet' name='Avg Temp vs. Total Energy Consumption by month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='4' param='[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[none:month:nk]</field>
            <field>[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[none:year:qk]</field>
            <field>[federated.10wjksk0v7mh2g1dy6voq1gs23ua].[sum:Av Temp:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A884E35E-CFD6-44F5-A4A3-6980AEBD7CA2}' />
    </window>
    <window class='dashboard' maximized='true' name='Electricty'>
      <viewpoints />
      <active id='9' />
      <simple-id uuid='{1DF5045D-74C8-425D-9260-7DE88B11DBA0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Avg Price by Sector' width='384'>
      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
      gg==
    </thumbnail>
    <thumbnail height='384' name='Avg Price by state' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Avg Price vs. Monthly Temp' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Avg Temp vs. Total Energy Consumption by month' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Electricity Source' width='384'>
      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
      7Ab6zaEW9vGTf/glWtpbv9E1kL1VlLMv8ZNf/Art7WepJdvS0d3/KZOpZjbxt//0JS50nDGW
      oeHS+wNMppJcxd/8y1fo6jjzYZuaiv5P/pDJFHbj+Nkvh9DZfralNhQZtwf+mMlktl7gn74Y
      Q0fr2XZfr1bx4R/9KZM5XH2Kf/vqKdrPtQpQyxXc+ZM/ZzKJ+GP8+9AcWs/1WFKKJXz2Z6wt
      to3f/Ns/4sj2v9YCXOf96L/JeqY2fvXPP0PZFYH3nFPofDfQ3x8WfvkPfwfdV/uaU4ikGjAv
      Awv/+tMfg4s0nathIPD+ekfmFz/+S0j17edcJQQx1OzI/Pwv/wLBls5zb3gEKdqGmwzCtjT8
      /K//CuGWC+cYG4HaTiZjGVX8/Y//FtHW15lwQw+TMdUifvaTv0esteM1psah6ZxRzeKnb4rr
      NnZcK6UCOi7dQG9bLZanR7CwlcSNbqe0GVAt5HCx/za6GyNYePIAS7tHuNzibNUtZ4/Qd+sD
      dNb68WLsPlYOOtAdc/aNFtMpXPngY7RH3JgZ+S02km1oc8o2AigcJnHj4ztoCQBTw7/FdqYF
      DW9xjuaTKdz6+A4afYSJof/FbrYJ39wv/R+zNS9JFEcXrwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Electricty' width='384'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Pop vs Coal Consumption' width='384'>
      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
      IYRwpZwHgJ2K0X36NIXzG7F6T9PV1sdI62H6+lPkhWzO7z8EKNr2vkXnyTMTEymL9n1v0nHi
      XK7LE0II1/Lkega6L0TtyrWgFOOajZU26e28RN2HnsCrgzpxGttWBErrsMYuY6vlpPpaCM5b
      SmJ8oo+hrg4G2loASJcWk167NKs12rZNKpWa8vRqYrcme/Ow0s6aWZbjPhUOarSc16jS5uSN
      AMu0UA77tG178vkqldG6mvxdZ7ZubEfrOrManchoXZvO1o1pmlgO+7QcrBvA+XK0LEft0mkT
      zXGNk/eZ6fjJ9vp2NsadL0enbjXGcx4AALaZpGP/DtLeUhqWV3CqXcNzZd9D0zSUrUAzKCjw
      MzIcY/xiNxWLm2g72g2APxwmv6IagFAkiK5nd8dF07Q761PL8jyUs3aapjvuU0ObdGOYSY3K
      6Xwz6FPTJl+QGpmtK43JQyCjGh0tR2Z0jNpO34vufPzYDtYNOH/fynF/GloWx89EnxmMH83J
      +HHeZy5qdDTfW3xuch4AyrY4v+1FCpfez/zqcjRNEfBAMm0T8GrYtrq2govrG2k/ewo77SEY
      8F7rI1RYTKiwGIB83cIwDMcL0ol0Oo3HM/VF4XTj6nQeCmff4HTdeZ9OaBn0ZxvOBqhu6I77
      TDtZpxpZfc+Q2bpJOQz7bNeo686Xo+Vw42HoOobT9e3w8+b4fTut0TDQnb5vbfI+M103KQff
      7jLp08kY13Ixxm/x2c55AKRHuxkdg8LEEH2tQ4RKq6laupSOA7sJhw1C1YuujQVvXjnJzpfJ
      b37UyZdqIYQQdyDnAeDNr6b5w49e+9vwBfAULKC+sBLLUngDAQAWbdkKms7ix59G8/hAUzRt
      LM51eUII4Vo5DwBNN/CH82543fAFMN5fiNd35XX/1SnxeOUyBSGEyBXZwgohhEtJAAghhEtJ
      AAghhEtJAAghhEtJAAghhEtJAAghhEtJAAghhEtJAAghhEtJAAghhEtJAAghhEtJAAghhEtJ
      AAghhEtJAAghhEtJAAghhEtJAAghhEtJAAghhEtJAAghhEtJAAghhEtJAAghhEtJAAghhEtJ
      AAghhEtJAAghhEtJAAghhEtJAAghhEtJAAghhEtJAAghhEtJAAghhEtJAAghhEtJAAghhEtJ
      AAghhEtJAAghhEtJAAghhEtJAAghhEtJAAghhEtJAAghhEtJAAghhEtJAAghhEtNQwAoor1t
      HPzO3zA0mgAg3ttG697dtB/aQ9e5FpSyOfSdP+dSW++1qc6//h3O7j+W+/KEEMKlch8Adoq+
      tm4KyoqxLAVA97HjVK/dwPzV9zLadgrbBl9RNaMdZyYmSQxiefKw4omclyeEEG7lyfkcdD91
      6++j690Xr71UvqSJ9t078PsNghX16DponhB+PUkiZTPecpaSxiX0XRgCoPvkEdoO7gWgaUEt
      iVWLslqiZVnE4/EpT28rO7vzsJKOmqXTJpbDPhVq8tmaGdSYcFhjKo3psE/LsiZto2yV0bpS
      k79tLNN03KdtO1nX9h2Np5tJp9PO13Uq5ahdMpVCc/q+TdNRO6fvW6XTjtolk0lwWqM1eY1K
      ZTZ+nH22na9vJ2PczniMTz7IzVt8tnMfADdQDHV2UNK4mvw8nfP7DmDbiwEoW1BDX1sXqeEY
      dfWRawFQvWwl1ctWAlCiWwQCATRNy1pF8XicYDA45emjms5kw8QwDMfzUKbGuIN2Xq8Hn8M+
      x9EmjQDDYxBw2J+d9uNkk+D1efE67DNuGJP2qelaRutqXMPB+/Y4ft8xXWeyj7Bh6BnVOOag
      jdfrdbyuLZ+PmIN2fp8Pw2GfKY8HJ5Hv9H2bXi9ONnF+vx/dYZ9Jw8Nk0adpmY2fmJbd9e1k
      jOsZj/HJP9ueW3y2Z+BHYEUimiBckIcnEMZOjmNfSbBQ5UKiF/ehhcox9Oxt4IUQQtwo53sA
      dirG5TOnSBIgdeE4enIBCzfeT++549gKatZuwWMYlNbVoxkBimsWEKptAMOipLYq1+UJIYRr
      5TwAdF+I6ua1N7xe07zmur/LGyaO65cve69teV1ebosTQggXk+sAhBDCpSQAhBDCpSQAhBDC
      pSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDC
      pSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDC
      pSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDC
      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
      IcQe9U96G8UQVRMp6wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='US Avg Electricity Price' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
