<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.1017.1259                               -->
<workbook source-build='2019.3.1 (20193.19.1017.1259)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Monthly Data (Average_Retail_Prices_of_Electricity)' inline='true' name='federated.1rm090r1756gfs1agulm2191tz90' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Average_Retail_Prices_of_Electricity' name='excel-direct.1w5uwpk0xv6in81a3zul907f9ohl'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ckuo2/RiceHW/project3/db/CSV/Average_Retail_Prices_of_Electricity.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1w5uwpk0xv6in81a3zul907f9ohl' name='Annual Price' table='[&apos;Annual Price$&apos;]' type='table'>
          <columns gridOrigin='A1:G61:no:A1:G61:0' header='yes' outcome='2'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='real' name='Average Retail Price of Electricity, Residential' ordinal='1' />
            <column datatype='real' name='Average Retail Price of Electricity, Commercial' ordinal='2' />
            <column datatype='real' name='Average Retail Price of Electricity, Industrial' ordinal='3' />
            <column datatype='real' name='Average Retail Price of Electricity, Transportation' ordinal='4' />
            <column datatype='real' name='Average Retail Price of Electricity, Other' ordinal='5' />
            <column datatype='real' name='Average Retail Price of Electricity, Total' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Annual Price]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Residential</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Residential]</local-name>
            <parent-name>[Annual Price]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Residential</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Commercial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Commercial]</local-name>
            <parent-name>[Annual Price]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Commercial</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Industrial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Industrial]</local-name>
            <parent-name>[Annual Price]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Industrial</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Transportation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Transportation]</local-name>
            <parent-name>[Annual Price]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Transportation</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Other</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Other]</local-name>
            <parent-name>[Annual Price]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Other</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Total]</local-name>
            <parent-name>[Annual Price]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Total</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Annual Price]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G61:no:A1:G61:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Commercial:qk]&quot;' value='Commercial' />
          <alias key='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Industrial:qk]&quot;' value='Industrial' />
          <alias key='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Other:qk]&quot;' value='Other' />
          <alias key='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Residential:qk]&quot;' value='Residential' />
          <alias key='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Total:qk]&quot;' value='Total' />
          <alias key='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Transportation:qk]&quot;' value='Transportation' />
        </aliases>
      </column>
      <column datatype='real' name='[Average Retail Price of Electricity, Commercial]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Average Retail Price of Electricity, Industrial]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Average Retail Price of Electricity, Other]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Average Retail Price of Electricity, Residential]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Average Retail Price of Electricity, Total]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Average Retail Price of Electricity, Transportation]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Industrial]' derivation='Attribute' name='[attr:Average Retail Price of Electricity, Industrial:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Residential]' derivation='Attribute' name='[attr:Average Retail Price of Electricity, Residential:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Transportation]' derivation='Attribute' name='[attr:Average Retail Price of Electricity, Transportation:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Commercial]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Commercial:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Industrial]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Industrial:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Other]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Other:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Residential]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Residential:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Total]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Transportation]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Transportation:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Avg' name='[avg:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Industrial]' derivation='None' name='[none:Average Retail Price of Electricity, Industrial:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Average Retail Price of Electricity, Residential]' derivation='None' name='[none:Average Retail Price of Electricity, Residential:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.612789' measure-ordering='alphabetic' measure-percentage='0.387211' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Commercial:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Residential:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[attr:Average Retail Price of Electricity, Residential:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Total:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Other:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[attr:Average Retail Price of Electricity, Industrial:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Industrial:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Industrial:ok]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Residential:ok]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[attr:Average Retail Price of Electricity, Transportation:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Transportation:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Summary (Avg price by state)' inline='true' name='federated.1crbjba0a6iert1cp3ufj0utxx7d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Avg price by state' name='excel-direct.14etssg1wd96wo19onbju14gcbht'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ckuo2/RiceHW/project3/db/CSV/Avg price by state.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.14etssg1wd96wo19onbju14gcbht' name='Summary' table='[Summary$]' type='table'>
          <columns gridOrigin='A1:F103:no:A1:F103:0' header='yes' outcome='2'>
            <column datatype='date' name='Year' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='real' name='Residential' ordinal='2' />
            <column datatype='real' name='Commercial' ordinal='3' />
            <column datatype='real' name='Industrial' ordinal='4' />
            <column datatype='real' name='Transportation' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Summary]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Summary]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Residential</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Residential]</local-name>
            <parent-name>[Summary]</parent-name>
            <remote-alias>Residential</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Commercial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Commercial]</local-name>
            <parent-name>[Summary]</parent-name>
            <remote-alias>Commercial</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industrial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Industrial]</local-name>
            <parent-name>[Summary]</parent-name>
            <remote-alias>Industrial</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transportation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Transportation]</local-name>
            <parent-name>[Summary]</parent-name>
            <remote-alias>Transportation</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Summary]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F103:no:A1:F103:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='Sum' datatype='real' name='[Commercial]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='real' name='[Industrial]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='real' name='[Residential]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='real' name='[Transportation]' role='dimension' type='ordinal' />
      <column-instance column='[Commercial]' derivation='Avg' name='[avg:Commercial:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Industrial]' derivation='Avg' name='[avg:Industrial:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Avg' name='[avg:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Residential]' derivation='Avg' name='[avg:Residential:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Transportation]' derivation='Avg' name='[avg:Transportation:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Commercial]' derivation='Sum' name='[sum:Commercial:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Industrial]' derivation='Sum' name='[sum:Industrial:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Residential]' derivation='Sum' name='[sum:Residential:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/ckuo2/OneDrive/Documents/My Tableau Repository/Datasources/Summary (Avg price by state).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/22/2019 01:27:09 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Summary (Avg price by state)' increment-value='%null%' refresh-type='create' rows-inserted='102' timestamp-start='2019-11-22 01:27:09.846' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>0</ordinal>
              <family>Summary</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>1</ordinal>
              <family>Summary</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Residential</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Residential]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Residential</remote-alias>
              <ordinal>2</ordinal>
              <family>Summary</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Commercial</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Commercial]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Commercial</remote-alias>
              <ordinal>3</ordinal>
              <family>Summary</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>94</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Industrial</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Industrial]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Industrial</remote-alias>
              <ordinal>4</ordinal>
              <family>Summary</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>95</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Transportation</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Transportation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Transportation</remote-alias>
              <ordinal>5</ordinal>
              <family>Summary</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>55</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.557726' measure-ordering='alphabetic' measure-percentage='0.442274' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Commercial:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[sum:Commercial:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Residential:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[sum:Residential:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Industrial:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[sum:Industrial:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Transportation:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Electricity_Source' inline='true' name='federated.1joia7m11hnp9112fvm5b0rh42dk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Electricity_generation' name='excel-direct.1471byt1fqmvfe1cp203w1sk44ff'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ckuo2/RiceHW/project3/db/CSV/Electricity_generation.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1471byt1fqmvfe1cp203w1sk44ff' name='Electricity_Source' table='[Electricity_Source$]' type='table'>
          <columns gridOrigin='A1:F70:no:A1:F70:0' header='yes' outcome='6'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='coal' ordinal='1' />
            <column datatype='integer' name='natural gas' ordinal='2' />
            <column datatype='integer' name='nuclear' ordinal='3' />
            <column datatype='integer' name='renewables' ordinal='4' />
            <column datatype='integer' name='petroleum and other' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Electricity_Source]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[coal]</local-name>
            <parent-name>[Electricity_Source]</parent-name>
            <remote-alias>coal</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>natural gas</remote-name>
            <remote-type>20</remote-type>
            <local-name>[natural gas]</local-name>
            <parent-name>[Electricity_Source]</parent-name>
            <remote-alias>natural gas</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nuclear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[nuclear]</local-name>
            <parent-name>[Electricity_Source]</parent-name>
            <remote-alias>nuclear</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>renewables</remote-name>
            <remote-type>20</remote-type>
            <local-name>[renewables]</local-name>
            <parent-name>[Electricity_Source]</parent-name>
            <remote-alias>renewables</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>petroleum and other</remote-name>
            <remote-type>20</remote-type>
            <local-name>[petroleum and other]</local-name>
            <parent-name>[Electricity_Source]</parent-name>
            <remote-alias>petroleum and other</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Electricity_Source]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F70:no:A1:F70:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Coal' datatype='integer' name='[coal]' role='measure' type='quantitative' />
      <column caption='Natural Gas' datatype='integer' name='[natural gas]' role='measure' type='quantitative' />
      <column caption='Nuclear' datatype='integer' name='[nuclear]' role='measure' type='quantitative' />
      <column caption='Petroleum And Other' datatype='integer' name='[petroleum and other]' role='measure' type='quantitative' />
      <column caption='Renewables' datatype='integer' name='[renewables]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[coal]' derivation='Sum' name='[sum:coal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[natural gas]' derivation='Sum' name='[sum:natural gas:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nuclear]' derivation='Sum' name='[sum:nuclear:qk]' pivot='key' type='quantitative' />
      <column-instance column='[petroleum and other]' derivation='Sum' name='[sum:petroleum and other:qk]' pivot='key' type='quantitative' />
      <column-instance column='[renewables]' derivation='Sum' name='[sum:renewables:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/ckuo2/OneDrive/Documents/My Tableau Repository/Datasources/Electricity_Source.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/22/2019 01:26:47 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Electricity_Source' increment-value='%null%' refresh-type='create' rows-inserted='69' timestamp-start='2019-11-22 01:26:47.443' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>0</ordinal>
              <family>Electricity_Source</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>69</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coal</remote-name>
              <remote-type>20</remote-type>
              <local-name>[coal]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coal</remote-alias>
              <ordinal>1</ordinal>
              <family>Electricity_Source</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>69</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>natural gas</remote-name>
              <remote-type>20</remote-type>
              <local-name>[natural gas]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>natural gas</remote-alias>
              <ordinal>2</ordinal>
              <family>Electricity_Source</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>66</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nuclear</remote-name>
              <remote-type>20</remote-type>
              <local-name>[nuclear]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nuclear</remote-alias>
              <ordinal>3</ordinal>
              <family>Electricity_Source</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>renewables</remote-name>
              <remote-type>20</remote-type>
              <local-name>[renewables]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>renewables</remote-alias>
              <ordinal>4</ordinal>
              <family>Electricity_Source</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>petroleum and other</remote-name>
              <remote-type>20</remote-type>
              <local-name>[petroleum and other]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>petroleum and other</remote-alias>
              <ordinal>5</ordinal>
              <family>Electricity_Source</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.40675' measure-ordering='alphabetic' measure-percentage='0.59325' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:petroleum and other:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:renewable:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:renewables:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:petroleum:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:coal:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:natural gas:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:nuclear:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:other:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:hydroelectric:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Prcice vs Temp by month (Price_vs_temp_by_month)' inline='true' name='federated.1n5l4pt1wu9nf41a4y7sd02va490' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Price_vs_temp_by_month' name='excel-direct.0vuqk4b15jcpu81ecy3tk05tyne4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ckuo2/RiceHW/project3/db/CSV/Price_vs_temp_by_month.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0vuqk4b15jcpu81ecy3tk05tyne4' name='Prcice vs Temp by month' table='[&apos;Prcice vs Temp by month$&apos;]' type='table'>
          <columns gridOrigin='A1:K524:no:A1:K524:0' header='yes' outcome='2'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='F3' ordinal='2' />
            <column datatype='string' name='Month' ordinal='3' />
            <column datatype='real' name='Average Retail Price of Electricity, Residential' ordinal='4' />
            <column datatype='real' name='Average Retail Price of Electricity, Commercial' ordinal='5' />
            <column datatype='real' name='Average Retail Price of Electricity, Industrial' ordinal='6' />
            <column datatype='real' name='Average Retail Price of Electricity, Transportation' ordinal='7' />
            <column datatype='real' name='Average Retail Price of Electricity, Other' ordinal='8' />
            <column datatype='real' name='Average Retail Price of Electricity, Total' ordinal='9' />
            <column datatype='real' name='Temp' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Residential</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Residential]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Residential</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Commercial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Commercial]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Commercial</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Industrial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Industrial]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Industrial</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Transportation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Transportation]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Transportation</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Other</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Other]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Other</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Retail Price of Electricity, Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Retail Price of Electricity, Total]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Average Retail Price of Electricity, Total</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temp]</local-name>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias>Temp</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Prcice vs Temp by month]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K524:no:A1:K524:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Commercial:qk]&quot;' value='Commercial' />
          <alias key='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Industrial:qk]&quot;' value='Industrial' />
          <alias key='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Residential:qk]&quot;' value='Residential' />
          <alias key='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Total:qk]&quot;' value='Total' />
          <alias key='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Transportation:qk]&quot;' value='Transportation' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[Average Retail Price of Electricity, Commercial]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Average Retail Price of Electricity, Industrial]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='real' name='[Average Retail Price of Electricity, Other]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Average Retail Price of Electricity, Residential]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Average Retail Price of Electricity, Total]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='real' name='[Average Retail Price of Electricity, Transportation]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[F3]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Temp]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Commercial]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Commercial:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Industrial]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Industrial:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Residential]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Residential:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Total]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Retail Price of Electricity, Transportation]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Transportation:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Temp]' derivation='Avg' name='[avg:Temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Temp]' derivation='None' name='[none:Temp:ok]' pivot='key' type='ordinal' />
      <column-instance column='[F3]' derivation='Sum' name='[sum:F3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/ckuo2/OneDrive/Documents/My Tableau Repository/Datasources/Prcice vs Temp by month (Price_vs_temp_by_month).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/22/2019 01:26:28 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Prcice vs Temp by month (Price_vs_temp_by_month)' increment-value='%null%' refresh-type='create' rows-inserted='523' timestamp-start='2019-11-22 01:26:28.860' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>523</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>1</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F3</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F3</remote-alias>
              <ordinal>2</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>3</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Retail Price of Electricity, Residential</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Retail Price of Electricity, Residential]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Retail Price of Electricity, Residential</remote-alias>
              <ordinal>4</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>288</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Retail Price of Electricity, Commercial</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Retail Price of Electricity, Commercial]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Retail Price of Electricity, Commercial</remote-alias>
              <ordinal>5</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>261</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Retail Price of Electricity, Industrial</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Retail Price of Electricity, Industrial]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Retail Price of Electricity, Industrial</remote-alias>
              <ordinal>6</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>221</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Retail Price of Electricity, Transportation</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Retail Price of Electricity, Transportation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Retail Price of Electricity, Transportation</remote-alias>
              <ordinal>7</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Retail Price of Electricity, Other</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Retail Price of Electricity, Other]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Retail Price of Electricity, Other</remote-alias>
              <ordinal>8</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Retail Price of Electricity, Total</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Retail Price of Electricity, Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Retail Price of Electricity, Total</remote-alias>
              <ordinal>9</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Temp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Temp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Temp</remote-alias>
              <ordinal>10</ordinal>
              <family>Prcice vs Temp by month</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>472</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.650089' measure-ordering='alphabetic' measure-percentage='0.349911' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Temp:ok]' type='palette'>
            <map to='#499894'>
              <bucket>46.399999999999999</bucket>
            </map>
            <map to='#499894'>
              <bucket>49.0</bucket>
            </map>
            <map to='#499894'>
              <bucket>51.0</bucket>
            </map>
            <map to='#499894'>
              <bucket>53.200000000000003</bucket>
            </map>
            <map to='#499894'>
              <bucket>59.399999999999999</bucket>
            </map>
            <map to='#499894'>
              <bucket>63.200000000000003</bucket>
            </map>
            <map to='#499894'>
              <bucket>67.799999999999997</bucket>
            </map>
            <map to='#499894'>
              <bucket>71.599999999999994</bucket>
            </map>
            <map to='#499894'>
              <bucket>78.5</bucket>
            </map>
            <map to='#499894'>
              <bucket>79.200000000000003</bucket>
            </map>
            <map to='#499894'>
              <bucket>83.900000000000006</bucket>
            </map>
            <map to='#499894'>
              <bucket>85.099999999999994</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>43.100000000000001</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>49.799999999999997</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>50.799999999999997</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>58.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>59.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>66.900000000000006</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>70.599999999999994</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>74.900000000000006</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>76.5</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>82.700000000000003</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>43.399999999999999</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>44.5</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>50.600000000000001</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>51.799999999999997</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>58.700000000000003</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>61.200000000000003</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>69.599999999999994</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>71.5</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>77.900000000000006</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>78.099999999999994</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>83.299999999999997</bucket>
            </map>
            <map to='#79706e'>
              <bucket>45.399999999999999</bucket>
            </map>
            <map to='#79706e'>
              <bucket>48.200000000000003</bucket>
            </map>
            <map to='#79706e'>
              <bucket>55.700000000000003</bucket>
            </map>
            <map to='#79706e'>
              <bucket>56.5</bucket>
            </map>
            <map to='#79706e'>
              <bucket>64.400000000000006</bucket>
            </map>
            <map to='#79706e'>
              <bucket>65.0</bucket>
            </map>
            <map to='#79706e'>
              <bucket>72.799999999999997</bucket>
            </map>
            <map to='#79706e'>
              <bucket>73.299999999999997</bucket>
            </map>
            <map to='#79706e'>
              <bucket>76.900000000000006</bucket>
            </map>
            <map to='#79706e'>
              <bucket>80.799999999999997</bucket>
            </map>
            <map to='#79706e'>
              <bucket>82.799999999999997</bucket>
            </map>
            <map to='#79706e'>
              <bucket>85.200000000000003</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>47.200000000000003</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>49.100000000000001</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>54.399999999999999</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>55.399999999999999</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>63.600000000000001</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>64.299999999999997</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>68.5</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>72.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>78.599999999999994</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>79.299999999999997</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>84.099999999999994</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>86.400000000000006</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>44.799999999999997</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>47.399999999999999</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>52.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>53.299999999999997</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>58.899999999999999</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>61.700000000000003</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>70.200000000000003</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>71.799999999999997</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>75.700000000000003</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>78.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>82.099999999999994</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>83.400000000000006</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>48.899999999999999</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>49.399999999999999</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>50.399999999999999</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>57.299999999999997</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>65.799999999999997</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>66.299999999999997</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>66.599999999999994</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>74.400000000000006</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>76.299999999999997</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>80.900000000000006</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>82.400000000000006</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>42.399999999999999</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>43.899999999999999</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>50.200000000000003</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>51.100000000000001</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>58.299999999999997</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>59.5</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>67.099999999999994</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>70.700000000000003</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>75.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>76.599999999999994</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>82.900000000000006</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>84.200000000000003</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>48.799999999999997</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>49.200000000000003</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>52.5</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>56.899999999999999</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>61.399999999999999</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>66.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>66.099999999999994</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>74.299999999999997</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>77.400000000000006</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>80.700000000000003</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>81.700000000000003</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>45.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>47.600000000000001</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>52.299999999999997</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>55.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>61.799999999999997</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>63.799999999999997</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>70.299999999999997</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>72.400000000000006</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>75.799999999999997</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>78.200000000000003</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>82.200000000000003</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>83.599999999999994</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>45.5</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>48.299999999999997</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>51.899999999999999</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>56.200000000000003</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>64.5</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>65.299999999999997</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>73.599999999999994</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>73.700000000000003</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>77.099999999999994</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>80.299999999999997</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>81.299999999999997</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>85.400000000000006</bucket>
            </map>
            <map to='#d37295'>
              <bucket>45.799999999999997</bucket>
            </map>
            <map to='#d37295'>
              <bucket>48.399999999999999</bucket>
            </map>
            <map to='#d37295'>
              <bucket>56.600000000000001</bucket>
            </map>
            <map to='#d37295'>
              <bucket>57.600000000000001</bucket>
            </map>
            <map to='#d37295'>
              <bucket>61.100000000000001</bucket>
            </map>
            <map to='#d37295'>
              <bucket>65.400000000000006</bucket>
            </map>
            <map to='#d37295'>
              <bucket>69.700000000000003</bucket>
            </map>
            <map to='#d37295'>
              <bucket>73.799999999999997</bucket>
            </map>
            <map to='#d37295'>
              <bucket>77.200000000000003</bucket>
            </map>
            <map to='#d37295'>
              <bucket>80.5</bucket>
            </map>
            <map to='#d37295'>
              <bucket>81.400000000000006</bucket>
            </map>
            <map to='#d37295'>
              <bucket>87.0</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>46.200000000000003</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>49.299999999999997</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>49.600000000000001</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>57.200000000000003</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>64.900000000000006</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>66.5</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>70.5</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>75.5</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>79.400000000000006</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>81.799999999999997</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>46.600000000000001</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>50.700000000000003</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>53.0</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>57.899999999999999</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>58.399999999999999</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>66.400000000000006</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>66.700000000000003</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>74.599999999999994</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>76.400000000000006</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>81.099999999999994</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>82.599999999999994</bucket>
            </map>
            <map to='#e15759'>
              <bucket>44.899999999999999</bucket>
            </map>
            <map to='#e15759'>
              <bucket>47.799999999999997</bucket>
            </map>
            <map to='#e15759'>
              <bucket>54.799999999999997</bucket>
            </map>
            <map to='#e15759'>
              <bucket>55.899999999999999</bucket>
            </map>
            <map to='#e15759'>
              <bucket>59.600000000000001</bucket>
            </map>
            <map to='#e15759'>
              <bucket>64.200000000000003</bucket>
            </map>
            <map to='#e15759'>
              <bucket>68.599999999999994</bucket>
            </map>
            <map to='#e15759'>
              <bucket>72.5</bucket>
            </map>
            <map to='#e15759'>
              <bucket>78.700000000000003</bucket>
            </map>
            <map to='#e15759'>
              <bucket>79.5</bucket>
            </map>
            <map to='#e15759'>
              <bucket>80.099999999999994</bucket>
            </map>
            <map to='#e15759'>
              <bucket>84.400000000000006</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>46.100000000000001</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>48.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>50.899999999999999</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>52.899999999999999</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>59.299999999999997</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>63.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>67.400000000000006</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>70.900000000000006</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>76.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>79.099999999999994</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>82.299999999999997</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>83.700000000000003</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>42.5</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>44.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>50.299999999999997</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>51.5</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>60.299999999999997</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>61.899999999999999</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>67.200000000000003</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>71.400000000000006</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>75.200000000000003</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>77.599999999999994</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>83.099999999999994</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>84.299999999999997</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>45.899999999999999</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>48.700000000000003</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>56.799999999999997</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>57.0</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>64.700000000000003</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>65.900000000000006</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>73.900000000000006</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>74.0</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>74.099999999999994</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>81.5</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>88.200000000000003</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>47.899999999999999</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>48.600000000000001</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>55.5</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>56.0</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>59.700000000000003</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>64.799999999999997</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>69.099999999999994</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>72.599999999999994</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>79.0</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>79.900000000000006</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>80.599999999999994</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>84.5</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>44.399999999999999</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>47.100000000000001</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>51.700000000000003</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>53.100000000000001</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>58.5</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>61.0</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>66.799999999999997</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>69.200000000000003</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>75.400000000000006</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>77.700000000000003</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>83.200000000000003</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Commercial:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Residential:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Total:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Industrial:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[sum:F3:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Temp:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Transportation:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Avg Price by Sector'>
      <table>
        <view>
          <datasources>
            <datasource caption='Monthly Data (Average_Retail_Prices_of_Electricity)' name='federated.1rm090r1756gfs1agulm2191tz90' />
          </datasources>
          <datasource-dependencies datasource='federated.1rm090r1756gfs1agulm2191tz90'>
            <column datatype='real' name='[Average Retail Price of Electricity, Commercial]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Average Retail Price of Electricity, Industrial]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Average Retail Price of Electricity, Other]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Average Retail Price of Electricity, Residential]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Average Retail Price of Electricity, Total]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Average Retail Price of Electricity, Transportation]' role='dimension' type='ordinal' />
            <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Commercial]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Commercial:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Industrial]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Industrial:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Other]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Other:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Residential]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Residential:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Total]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Transportation]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Transportation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Transportation]' derivation='None' name='[none:Average Retail Price of Electricity, Transportation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Commercial:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Industrial:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Residential:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Total:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Transportation:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Commercial:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Industrial:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Residential:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Total:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Other:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Transportation:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]' included-values='in-range'>
            <min>1960</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]</column>
            <column>[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]' field-type='quantitative' major-origin='0' major-spacing='5' max='2019' min='1960' range-type='fixed' scope='cols' type='space' />
            <format attr='auto-subtitle' class='0' field='[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.1rm090r1756gfs1agulm2191tz90].[Multiple Values]' scope='rows' value='Cents per Kilowatthour,  Including Taxes' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]' value='Sectors'>
              <formatted-text>
                <run>Sectors</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]' />
              <text column='[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rm090r1756gfs1agulm2191tz90].[Multiple Values]</rows>
        <cols>[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{D99E33EC-8F44-4435-82F1-FFDC55596181}' />
    </worksheet>
    <worksheet name='Avg Price by state'>
      <table>
        <view>
          <datasources>
            <datasource caption='Summary (Avg price by state)' name='federated.1crbjba0a6iert1cp3ufj0utxx7d' />
          </datasources>
          <datasource-dependencies datasource='federated.1crbjba0a6iert1cp3ufj0utxx7d'>
            <column aggregation='Sum' datatype='real' name='[Commercial]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[Industrial]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[Residential]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Transportation]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Commercial]' derivation='Avg' name='[avg:Commercial:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Industrial]' derivation='Avg' name='[avg:Industrial:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Residential]' derivation='Avg' name='[avg:Residential:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Transportation]' derivation='Avg' name='[avg:Transportation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Commercial:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Industrial:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Residential:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Commercial:qk]&quot;</bucket>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Industrial:qk]&quot;</bucket>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Transportation:qk]&quot;</bucket>
              <bucket>&quot;[federated.1crbjba0a6iert1cp3ufj0utxx7d].[avg:Residential:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[none:State:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Hawaii&quot;</bucket>
              <bucket>&quot;Alaska&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;Rhode Island&quot;</bucket>
              <bucket>&quot;New Hampshire&quot;</bucket>
              <bucket>&quot;Vermont&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;Maine&quot;</bucket>
              <bucket>&quot;Michigan&quot;</bucket>
              <bucket>&quot;Iowa&quot;</bucket>
              <bucket>&quot;Minnesota&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
              <bucket>&quot;Missouri&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;Kansas&quot;</bucket>
              <bucket>&quot;Maryland&quot;</bucket>
              <bucket>&quot;District of Columbia&quot;</bucket>
              <bucket>&quot;Colorado&quot;</bucket>
              <bucket>&quot;New Mexico&quot;</bucket>
              <bucket>&quot;South Carolina&quot;</bucket>
              <bucket>&quot;South Dakota&quot;</bucket>
              <bucket>&quot;North Dakota&quot;</bucket>
              <bucket>&quot;Nebraska&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>&quot;Indiana&quot;</bucket>
              <bucket>&quot;Pennsylvania&quot;</bucket>
              <bucket>&quot;Ohio&quot;</bucket>
              <bucket>&quot;Delaware&quot;</bucket>
              <bucket>&quot;Wyoming&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Montana&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Virginia&quot;</bucket>
              <bucket>&quot;Illinois&quot;</bucket>
              <bucket>&quot;West Virginia&quot;</bucket>
              <bucket>&quot;North Carolina&quot;</bucket>
              <bucket>&quot;Mississippi&quot;</bucket>
              <bucket>&quot;Tennessee&quot;</bucket>
              <bucket>&quot;Nevada&quot;</bucket>
              <bucket>&quot;Utah&quot;</bucket>
              <bucket>&quot;Oregon&quot;</bucket>
              <bucket>&quot;Idaho&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;Kentucky&quot;</bucket>
              <bucket>&quot;Louisiana&quot;</bucket>
              <bucket>&quot;Oklahoma&quot;</bucket>
              <bucket>&quot;Arkansas&quot;</bucket>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[yr:Year:ok]'>
            <groupfilter function='level-members' level='[yr:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[yr:Year:ok]</column>
            <column>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[Multiple Values]' scope='rows' value='Cents per Kilowatthour' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[:Measure Names]' value='Sector&#10;'>
              <formatted-text>
                <run>Sector&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[none:State:nk]' />
              <color column='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[:Measure Names]' />
              <lod column='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[Multiple Values]</rows>
        <cols>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[none:State:nk]</cols>
      </table>
      <simple-id uuid='{D0615383-896E-4324-91C8-7FA20B21B632}' />
    </worksheet>
    <worksheet name='Avg Price vs. Monthly Temp'>
      <table>
        <view>
          <datasources>
            <datasource caption='Prcice vs Temp by month (Price_vs_temp_by_month)' name='federated.1n5l4pt1wu9nf41a4y7sd02va490' />
          </datasources>
          <datasource-dependencies datasource='federated.1n5l4pt1wu9nf41a4y7sd02va490'>
            <column aggregation='Sum' datatype='real' name='[Average Retail Price of Electricity, Commercial]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Average Retail Price of Electricity, Industrial]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Average Retail Price of Electricity, Residential]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Average Retail Price of Electricity, Total]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[Average Retail Price of Electricity, Transportation]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temp]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Commercial]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Commercial:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Industrial]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Industrial:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Residential]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Residential:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Total]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Transportation]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Transportation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Temp]' derivation='Avg' name='[avg:Temp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Commercial]' derivation='None' name='[none:Average Retail Price of Electricity, Commercial:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Residential:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Total:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Industrial:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Commercial:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Transportation:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Residential:qk]&quot;</bucket>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Total:qk]&quot;</bucket>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Average Retail Price of Electricity, Industrial:qk]&quot;</bucket>
              <bucket>&quot;[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Average Retail Price of Electricity, Commercial:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Year:qk]' included-values='in-range'>
            <min>2000</min>
          </filter>
          <slices>
            <column>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Year:qk]</column>
            <column>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Temp:qk]' value='56' />
            <format attr='width' field='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[Multiple Values]' value='56' />
            <format attr='title' class='0' field='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[Multiple Values]' scope='rows' value='Cents per Kilowatthour,  Including Taxes' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Month:nk]' value='61' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]' value='Avg. Retail Price (Cents per KW)'>
              <formatted-text>
                <run>Avg. Retail Price (Cents per KW)</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]' />
              <text column='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Temp:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1n5l4pt1wu9nf41a4y7sd02va490].[avg:Temp:qk] + [federated.1n5l4pt1wu9nf41a4y7sd02va490].[Multiple Values])</rows>
        <cols>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Month:nk]</cols>
      </table>
      <simple-id uuid='{5829885D-BEDE-4ABF-B66A-B471047C345E}' />
    </worksheet>
    <worksheet name='Electricity Source'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electricity_Source' name='federated.1joia7m11hnp9112fvm5b0rh42dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1joia7m11hnp9112fvm5b0rh42dk'>
            <column caption='Coal' datatype='integer' name='[coal]' role='measure' type='quantitative' />
            <column caption='Natural Gas' datatype='integer' name='[natural gas]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Nuclear' datatype='integer' name='[nuclear]' role='measure' type='quantitative' />
            <column caption='Petroleum And Other' datatype='integer' name='[petroleum and other]' role='measure' type='quantitative' />
            <column caption='Renewables' datatype='integer' name='[renewables]' role='measure' type='quantitative' />
            <column-instance column='[coal]' derivation='Sum' name='[sum:coal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[natural gas]' derivation='Sum' name='[sum:natural gas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nuclear]' derivation='Sum' name='[sum:nuclear:qk]' pivot='key' type='quantitative' />
            <column-instance column='[petroleum and other]' derivation='Sum' name='[sum:petroleum and other:qk]' pivot='key' type='quantitative' />
            <column-instance column='[renewables]' derivation='Sum' name='[sum:renewables:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1joia7m11hnp9112fvm5b0rh42dk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:coal:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:natural gas:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:petroleum and other:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:renewables:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:nuclear:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1joia7m11hnp9112fvm5b0rh42dk].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:coal:qk]&quot;</bucket>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:natural gas:qk]&quot;</bucket>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:petroleum and other:qk]&quot;</bucket>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:renewables:qk]&quot;</bucket>
              <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:nuclear:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1joia7m11hnp9112fvm5b0rh42dk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1joia7m11hnp9112fvm5b0rh42dk].[Multiple Values]' scope='rows' value='billion kilowatthours' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1joia7m11hnp9112fvm5b0rh42dk].[:Measure Names]' />
              <lod column='[federated.1joia7m11hnp9112fvm5b0rh42dk].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1joia7m11hnp9112fvm5b0rh42dk].[Multiple Values]</rows>
        <cols>[federated.1joia7m11hnp9112fvm5b0rh42dk].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{9A6D0E29-315E-4B0B-AE0F-B28B8D52B0C0}' />
    </worksheet>
    <worksheet name='US Avg Electricity Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='Monthly Data (Average_Retail_Prices_of_Electricity)' name='federated.1rm090r1756gfs1agulm2191tz90' />
          </datasources>
          <datasource-dependencies datasource='federated.1rm090r1756gfs1agulm2191tz90'>
            <column datatype='real' name='[Average Retail Price of Electricity, Total]' role='dimension' type='ordinal' />
            <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Average Retail Price of Electricity, Total]' derivation='Avg' name='[avg:Average Retail Price of Electricity, Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]' included-values='in-range'>
            <min>1960</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Total:qk]' scope='rows' value='Avg. Retail Price of Electricity (Cents per Kilowatthour,  Including Taxes)' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Total:qk]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]' field-type='quantitative' max='2018' min='1960' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Total:qk]</rows>
        <cols>[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{06B3ACF3-0B62-43F9-8F2A-C453811AD14C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Electricty' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='7' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='6' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='8' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='9' is-fixed='true' paired-zone-id='10' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='10' paired-zone-id='9' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Avg Price by Sector  ' captured-sheet='Avg Price by Sector' id='1' />
                  <story-point captured-sheet='Avg Price by state' id='2' />
                  <story-point captured-sheet='Electricity Source' id='3'>
                    <capturedDeltas>
                      <worksheet name='Electricity Source'>
                        <highlight field='[federated.1joia7m11hnp9112fvm5b0rh42dk].[:Measure Names]'>
                          <color-one-way>
                            <field>[federated.1joia7m11hnp9112fvm5b0rh42dk].[:Measure Names]</field>
                            <field>[federated.1joia7m11hnp9112fvm5b0rh42dk].[none:year:ok]</field>
                          </color-one-way>
                          <bucket-selection>
                            <bucket>&quot;[federated.1joia7m11hnp9112fvm5b0rh42dk].[sum:natural gas:qk]&quot;</bucket>
                          </bucket-selection>
                        </highlight>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Avg Price vs. Monthly Temp' id='4'>
                    <capturedDeltas>
                      <worksheet name='Avg Price vs. Monthly Temp'>
                        <filter class='quantitative' column='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Year:qk]' included-values='in-range'>
                          <min>1976</min>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{4EA10E4F-20B5-4DED-8CD6-08F12CD39BC3}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='US Avg Electricity Price'>
      <cards>
        <edge name='left'>
          <strip size='208'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Total:nk]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Total:ok]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Temp:nk]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[yr:Month:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9FC65A39-C8C7-46A8-859C-60A812A406E3}' />
    </window>
    <window class='worksheet' name='Avg Price by Sector'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='140'>
            <card param='[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='9' param='[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]' type='color' />
            <card param='[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1rm090r1756gfs1agulm2191tz90].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Commercial:qk]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[avg:Average Retail Price of Electricity, Industrial:qk]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Commercial:ok]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Industrial:ok]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Other:nk]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Residential:ok]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Total:ok]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Transportation:nk]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Transportation:ok]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:nk]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{60BDEB04-AD23-4643-8B8B-959C6D03DEF8}' />
    </window>
    <window class='worksheet' name='Avg Price vs. Monthly Temp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='10' param='[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[:Measure Names]</field>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Average Retail Price of Electricity, Commercial:ok]</field>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Average Retail Price of Electricity, Industrial:nk]</field>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Average Retail Price of Electricity, Residential:nk]</field>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Average Retail Price of Electricity, Total:nk]</field>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Average Retail Price of Electricity, Transportation:ok]</field>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Month:ok]</field>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Month:qk]</field>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Temp:nk]</field>
            <field>[federated.1n5l4pt1wu9nf41a4y7sd02va490].[none:Year:qk]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[:Measure Names]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Average Retail Price of Electricity, Total:ok]</field>
            <field>[federated.1rm090r1756gfs1agulm2191tz90].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7044E498-ECF9-46FE-BD2E-3D6BD45F89D9}' />
    </window>
    <window class='worksheet' name='Electricity Source'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1joia7m11hnp9112fvm5b0rh42dk].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1joia7m11hnp9112fvm5b0rh42dk].[:Measure Names]</field>
            <field>[federated.1joia7m11hnp9112fvm5b0rh42dk].[none:year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C4808978-C818-4757-8B9A-9ED99177190D}' />
    </window>
    <window class='worksheet' maximized='true' name='Avg Price by state'>
      <cards>
        <edge name='left'>
          <strip size='228'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='214'>
            <card param='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card param='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[yr:Year:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.1crbjba0a6iert1cp3ufj0utxx7d].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[:Measure Names]</field>
            <field>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[none:Commercial:ok]</field>
            <field>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[none:Industrial:ok]</field>
            <field>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[none:Residential:ok]</field>
            <field>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[none:State:nk]</field>
            <field>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[none:Transportation:nk]</field>
            <field>[federated.1crbjba0a6iert1cp3ufj0utxx7d].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{839F0A5C-D186-4B6E-8F78-E8626A508FD8}' />
    </window>
    <window class='dashboard' name='Electricty'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{1DF5045D-74C8-425D-9260-7DE88B11DBA0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Avg Price by Sector' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Avg Price by state' width='384'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Avg Price vs. Monthly Temp' width='384'>
      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
      Wcwc6UzWJPiLO25v5wGUmnzoPSf5+I//FCvtmPd96Ht47MjtDwF95WvPE0cxvThlwh3xzNcu
      8Kc/8gHOPf9ZXrw4xeMLzb0US4gDZTOFTV1M4m5fJ/m1STzMMJ9fZ3uaBYtTGuHW+3jNDk5l
      iHIz6bwV++YNJ4D28gVatsb7v/uHeN93/SDGgus6tz0HyKh9hatRifmJvNO4ffksU8ceRivF
      0YdO8YdfOsvjC+8kjuOt06CTJGE4HL7RooobsPG1J4vsh1EUoW7xd7TRwTRkZ1l23f9jNo6x
      /T6m3cZ2u6SvdskWZ/KVqxIPmziY2MOmbj4Pvd35O7j2N6HcNK/lN7u49d5tT+IV3cZ3R3Tt
      GaL7IcvMbf0+syzbh9LsZq29rbKZ5GBOhouThPQ2ymfv0onZbzgBLL38Rf44eYjjh5pox9la
      Vd5ae8skYG3GF5/9Ku/4lm/nwpf+CIA0zXCLQ1vl+Ngs/0N43vaZxZ7nEYbhtTu8F2z+Zazd
      ddumGTZNsIMhNk0wxfXmQhS77+9YpCJJdk2rq4LgmrdUnnfNvLDX3c51t6a73fmYWXuN5MrU
      9mPF+qq7NzTXBqbNtVi1zVdQKuY331xGT+nNx4rt8i+jeC0Enof2/e2yX+f/ix0F9K959M3Z
      9eOxgNWYxMnnbk9dbOzCqIde+3dka2uYTpes0yFrt7GD681eOb9jZ4XNlaK8DO2mKD/JF//w
      0q37m5Nz7WUt2yAI0Lf4DdgkJH1ju70jHEff1u8zchz2O8wqpW6rbInncRBVD9/zcG+jfH21
      63/bHbOHJiDLf/pXP8+zv7lzzL/HX/mRj/PokZs33cSDDSKjee3Fr3LxwkVKTp33PzbL+vNL
      2Idn6V1dojI7B3BNMrmTswyaON4KtjaKt4PyzpWComg7cCcpdjjAJun2NqPi8bgI4HG8ddvG
      cXFSzr3syF3ef54ottZw1YbeT/4suD7K91Gei3JdlOvlt/0gT1ZmSHbu8I4l+a5NLHnS2bHA
      xmYyUhabOVtBfbPpxabOVlOMTd0dHa079eD5T+c3i3nildboahVdq+FMTqCrNWi/gO29hvaS
      7RWeNpcBvMsrPd2ygnVX3/3m7uVZQO/lssHBlm8PCUDxp/6H/5Hvff9jux6rNWq3fGVQmeLD
      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
      /w9mh7GaizgkmQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Electricity Source' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Electricty' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='US Avg Electricity Price' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
